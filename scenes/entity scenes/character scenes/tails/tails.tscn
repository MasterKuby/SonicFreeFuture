[gd_scene load_steps=50 format=3 uid="uid://bww3l5hfaq7ty"]

[ext_resource type="PackedScene" uid="uid://ba32q4eh6d7h0" path="res://scenes/utility scenes/timers/Double Tap Dash Timer.tscn" id="1_3v1di"]
[ext_resource type="Script" uid="uid://dwh2vn1fj3bqo" path="res://scenes/entity scenes/character scenes/tails/tails.gd" id="1_33gqt"]
[ext_resource type="Texture2D" uid="uid://dpyi4lye5rjcc" path="res://assets/sonic battle/tails/tails falling/0.png" id="1_gq0si"]
[ext_resource type="Texture2D" uid="uid://derqyoaj5pp3g" path="res://assets/sonic battle/tails/tails hop/1.png" id="1_qid8a"]
[ext_resource type="Texture2D" uid="uid://bnp25u28kk7ub" path="res://assets/sonic battle/tails/tails idle/0.png" id="1_w1ge2"]
[ext_resource type="Texture2D" uid="uid://bfkhtjfu2byeo" path="res://assets/sonic battle/tails/tails hop/2.png" id="2_71api"]
[ext_resource type="Texture2D" uid="uid://fuktdugggr1t" path="res://assets/sonic battle/tails/tails falling/1.png" id="2_lvhos"]
[ext_resource type="Texture2D" uid="uid://dbio4slbf4ww0" path="res://assets/sonic battle/tails/tails idle/1.png" id="2_p6bxc"]
[ext_resource type="Texture2D" uid="uid://s2177rx8pr7m" path="res://assets/sonic battle/tails/tails falling/2.png" id="3_1uuoi"]
[ext_resource type="Texture2D" uid="uid://cywmghbxiumdc" path="res://assets/sonic battle/tails/tails idle/2.png" id="3_4po53"]
[ext_resource type="Texture2D" uid="uid://b2lck4t8yrdfb" path="res://assets/sonic battle/tails/tails hop/3.png" id="3_ojbqc"]
[ext_resource type="Texture2D" uid="uid://bgm0rvulklpvw" path="res://assets/sonic battle/tails/tails idle/3.png" id="4_iaami"]
[ext_resource type="Texture2D" uid="uid://byji5ldoc2m7k" path="res://assets/sonic battle/tails/tails hop/4.png" id="4_mq7vr"]
[ext_resource type="Texture2D" uid="uid://cfdplgb5i5636" path="res://assets/sonic battle/tails/tails falling/3.png" id="4_q2x0t"]
[ext_resource type="Texture2D" uid="uid://ccxurpap0mpgy" path="res://assets/sonic battle/tails/tails idle/4.png" id="5_da6vr"]
[ext_resource type="Texture2D" uid="uid://cwjrceja4yp1n" path="res://assets/sonic battle/tails/tails idle/5.png" id="6_rrwmx"]
[ext_resource type="Texture2D" uid="uid://bgp863dwmbckj" path="res://assets/sonic battle/tails/tails idle/6.png" id="7_qad7n"]
[ext_resource type="Texture2D" uid="uid://dk77fsxexejlc" path="res://assets/sonic battle/tails/tails idle/7.png" id="8_5uaty"]
[ext_resource type="Texture2D" uid="uid://bmtm3n8nkgyan" path="res://assets/sonic battle/tails/tails jump/0.png" id="9_kott3"]
[ext_resource type="Texture2D" uid="uid://boiut2cs7urii" path="res://assets/sonic battle/tails/tails fly/0.png" id="10_mgirt"]
[ext_resource type="Texture2D" uid="uid://crd4rad5dbnu2" path="res://assets/sonic battle/tails/tails jump/1.png" id="10_sbt5j"]
[ext_resource type="Texture2D" uid="uid://cqpodcuu2kydt" path="res://assets/sonic battle/tails/tails jump/2.png" id="11_88c1w"]
[ext_resource type="Texture2D" uid="uid://diykhjykb8tc" path="res://assets/sonic battle/tails/tails fly/1.png" id="11_laigc"]
[ext_resource type="Texture2D" uid="uid://drb4hf10kdyd8" path="res://assets/sonic battle/tails/tails jump/3.png" id="12_4vypu"]
[ext_resource type="Texture2D" uid="uid://d13hxnmq5n3mi" path="res://assets/sonic battle/tails/tails fly/2.png" id="12_kkreq"]
[ext_resource type="Texture2D" uid="uid://ca1ekb53qg407" path="res://assets/sonic battle/tails/tails fly/3.png" id="13_joi2s"]
[ext_resource type="Texture2D" uid="uid://dxenq41dr3q11" path="res://assets/sonic battle/tails/tails jump/4.png" id="13_payrq"]
[ext_resource type="Texture2D" uid="uid://0wuo38nl5f10" path="res://assets/sonic battle/tails/tails fly/4.png" id="14_ix541"]
[ext_resource type="Texture2D" uid="uid://dcq77j10lw7np" path="res://assets/sonic battle/tails/tails running/1.png" id="14_q377i"]
[ext_resource type="Texture2D" uid="uid://u5d1pqm4g1if" path="res://assets/sonic battle/tails/tails fly/5.png" id="15_h8b3s"]
[ext_resource type="Texture2D" uid="uid://dy15p7rnify6y" path="res://assets/sonic battle/tails/tails running/2.png" id="15_vb7jo"]
[ext_resource type="Texture2D" uid="uid://cil8r477wdykf" path="res://assets/sonic battle/tails/tails running/3.png" id="16_ynucu"]
[ext_resource type="Texture2D" uid="uid://bs6f6o1g345dc" path="res://assets/sonic battle/tails/tails running/4.png" id="17_j3qjy"]
[ext_resource type="Texture2D" uid="uid://cf5kyw16d5jvf" path="res://assets/sonic battle/tails/tails running/5.png" id="18_t6kad"]
[ext_resource type="Texture2D" uid="uid://d0fxkuqfgxj4d" path="res://assets/sonic battle/tails/tails running/6.png" id="19_8nh7o"]
[ext_resource type="Texture2D" uid="uid://ndhf3m0hwhk8" path="res://assets/sonic battle/tails/tails running/7.png" id="20_gadki"]
[ext_resource type="Texture2D" uid="uid://8ds66bykt1y4" path="res://assets/sonic battle/tails/tails running/8.png" id="21_832qj"]
[ext_resource type="Script" uid="uid://c4e1fna20ooxw" path="res://scenes/composition nodes/hp_component.gd" id="38_2ofmi"]
[ext_resource type="Script" uid="uid://b8g0homsjo5mp" path="res://scenes/composition nodes/hitbox_component.gd" id="39_jy36n"]
[ext_resource type="Script" uid="uid://dveqrdx0vhjk2" path="res://scenes/scripts/states/state_machine.gd" id="40_x6xji"]

[sub_resource type="SpriteFrames" id="SpriteFrames_q6asv"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_qid8a")
}, {
"duration": 1.0,
"texture": ExtResource("2_71api")
}, {
"duration": 1.0,
"texture": ExtResource("3_ojbqc")
}, {
"duration": 1.0,
"texture": ExtResource("4_mq7vr")
}],
"loop": true,
"name": &"dash forward",
"speed": 7.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_gq0si")
}, {
"duration": 1.0,
"texture": ExtResource("2_lvhos")
}, {
"duration": 1.0,
"texture": ExtResource("3_1uuoi")
}, {
"duration": 1.0,
"texture": ExtResource("4_q2x0t")
}],
"loop": false,
"name": &"falling",
"speed": 4.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("10_mgirt")
}, {
"duration": 1.0,
"texture": ExtResource("11_laigc")
}, {
"duration": 1.0,
"texture": ExtResource("12_kkreq")
}, {
"duration": 1.0,
"texture": ExtResource("13_joi2s")
}, {
"duration": 1.0,
"texture": ExtResource("14_ix541")
}, {
"duration": 1.0,
"texture": ExtResource("15_h8b3s")
}],
"loop": true,
"name": &"fly",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_w1ge2")
}, {
"duration": 1.0,
"texture": ExtResource("2_p6bxc")
}, {
"duration": 1.0,
"texture": ExtResource("3_4po53")
}, {
"duration": 1.0,
"texture": ExtResource("4_iaami")
}, {
"duration": 1.0,
"texture": ExtResource("5_da6vr")
}, {
"duration": 1.0,
"texture": ExtResource("6_rrwmx")
}, {
"duration": 1.0,
"texture": ExtResource("7_qad7n")
}, {
"duration": 1.0,
"texture": ExtResource("8_5uaty")
}],
"loop": true,
"name": &"idle",
"speed": 6.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("9_kott3")
}, {
"duration": 1.0,
"texture": ExtResource("10_sbt5j")
}, {
"duration": 1.0,
"texture": ExtResource("11_88c1w")
}, {
"duration": 1.0,
"texture": ExtResource("12_4vypu")
}, {
"duration": 1.0,
"texture": ExtResource("13_payrq")
}],
"loop": false,
"name": &"jump",
"speed": 6.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("14_q377i")
}, {
"duration": 1.0,
"texture": ExtResource("15_vb7jo")
}, {
"duration": 1.0,
"texture": ExtResource("16_ynucu")
}, {
"duration": 1.0,
"texture": ExtResource("17_j3qjy")
}, {
"duration": 1.0,
"texture": ExtResource("18_t6kad")
}, {
"duration": 1.0,
"texture": ExtResource("19_8nh7o")
}, {
"duration": 1.0,
"texture": ExtResource("20_gadki")
}, {
"duration": 1.0,
"texture": ExtResource("21_832qj")
}],
"loop": true,
"name": &"run",
"speed": 8.0
}]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_x7f5k"]
radius = 15.0
height = 32.0

[sub_resource type="GDScript" id="GDScript_jy36n"]
script/source = "extends State

@onready var sprite = $\"../../AnimatedSprite2D\"
@onready var tails = get_parent().get_parent()

func physicsUpdate(delta):
	idle()
	movingCheck()
	debugModeCheck()
	fallingCheck()
	jumpingCheck()
	flyingCheck()

func debugModeCheck(): # later check if this function needs to be in every script or if it can just be in sonic script then you call it from here and it still works
	if GV.debugMode == true and GV.activeCharacter == tails.character:
		transitioned.emit(self, \"debug\")

func movingCheck():
	if Input.is_action_pressed(\"a\") or Input.is_action_pressed(\"s\") or Input.is_action_pressed(\"d\"):
		if GV.activeCharacter == tails.character:
			transitioned.emit(self, \"moving\")
	if tails.direction:
		transitioned.emit(self, \"moving\")

func fallingCheck():
	if !tails.is_on_floor() and !tails.flyingEnabled:
		transitioned.emit(self, \"falling\")
	if !tails.is_on_floor() and tails.flyingEnabled:
		transitioned.emit(self, \"flying\")

func jumpingCheck():
	if Input.is_action_pressed(\"w\") and tails.is_on_floor() and GV.activeCharacter == tails.character and !tails.flyingEnabled:
		transitioned.emit(self, \"jumping\")

func flyingCheck():
	if Input.is_action_pressed(\"w\") and GV.activeCharacter == tails.character and tails.flyingEnabled:
		transitioned.emit(self, \"flying\")
	if !tails.is_on_floor() and tails.flyingEnabled:
		transitioned.emit(self, \"flying\")

func idle():
	if sprite.animation != \"idle\":
		if !Input.is_action_pressed(\"w\") and GV.activeCharacter == tails.character:
			sprite.animation = \"idle\"
			sprite.play()
		if GV.activeCharacter != tails.character:
			sprite.animation = \"idle\"
			sprite.play()
		# Reason we do this is so when we are current active character,
		# we will only idle when not holding W but then when we're not
		# active our w press wont matter
"

[sub_resource type="GDScript" id="GDScript_x6xji"]
script/source = "extends State

@onready var tails = get_parent().get_parent()
@onready var sprite = $\"../../AnimatedSprite2D\"
@onready var dashingTimer = $\"../../Double Tap Dash Timer\"

func physicsUpdate(delta):
	debugModeCheck()
	applyGravity(delta)
	flyingCheck()
	jumpingCheck()
	fallingCheck()
	idleCheck()
	move()

func debugModeCheck():
	if GV.debugMode == true and GV.activeCharacter == tails.character:
		transitioned.emit(self, \"debug\")

func applyGravity(delta):
	if not tails.is_on_floor() and GV.debugMode == false:
		tails.velocity += (tails.get_gravity() * delta) / 4*tails.scale.x
	if not tails.is_on_floor() and GV.debugMode == false and tails.flyingEnabled:
		tails.velocity += (tails.get_gravity() * delta) / 16*tails.scale.x

func flyingCheck():
	if Input.is_action_pressed(\"w\") and GV.activeCharacter == tails.character and tails.flyingEnabled:
		transitioned.emit(self, \"flying\")

func jumpingCheck():
	if Input.is_action_pressed(\"w\") and tails.is_on_floor() and GV.activeCharacter == tails.character and !tails.flyingEnabled:
		transitioned.emit(self, \"jumping\")

func fallingCheck():
	if !tails.is_on_floor() and !tails.flyingEnabled:
		transitioned.emit(self, \"falling\")
	if !tails.is_on_floor() and tails.flyingEnabled:
		transitioned.emit(self, \"flying\")

func idleCheck():
	if tails.is_on_floor() and !Input.is_action_pressed(\"a\") and !Input.is_action_pressed(\"s\") and !Input.is_action_pressed(\"d\"):
		transitioned.emit(self, \"idle\")
	if GV.activeCharacter != tails.character:
		transitioned.emit(self,\"idle\")

func move():
	if tails.direction:
		tails.velocity.x = lerp(tails.velocity.x, tails.direction*tails.SPEED*tails.scale.x, 0.025)
	if sprite.animation != \"run\":
			if abs(tails.velocity.x) >= 200*tails.scale.x: 
				sprite.animation = \"run\"
				sprite.play()
			if abs(tails.velocity.x) <= 200*tails.scale.x: 
				sprite.animation = \"run\"
				sprite.play()
# We have this abs() stuff for later if theres animation changes for tails' speed. Future prooting :D
"

[sub_resource type="GDScript" id="GDScript_3lrm4"]
script/source = "extends State

@onready var tails = get_parent().get_parent()

func physicsUpdate(delta):
	debugMode()


func debugMode():
	if GV.debugMode == true and GV.activeCharacter == tails.character:
		if Input.is_action_pressed(\"up\"):
			tails.velocity.y = 0
			tails.position.y += -5 * tails.scale.x
		if Input.is_action_pressed(\"down\"):
			tails.position.y += 5 * tails.scale.x
			tails.velocity.y = 0
		if Input.is_action_pressed(\"left\"):
			tails.position.x += -5 * tails.scale.x
		if Input.is_action_pressed(\"right\"):
			tails.position.x += 5 * tails.scale.x
	else:
		transitioned.emit(self, \"idle\")
"

[sub_resource type="GDScript" id="GDScript_kki6k"]
script/source = "extends State

@onready var sprite = $\"../../AnimatedSprite2D\"
@onready var tails = get_parent().get_parent()
@onready var dashingTimer = $\"../../Double Tap Dash Timer\"

func enter():
	tails.velocity.y = tails.JUMP_VELOCITY*tails.scale.x
	if sprite.animation != \"jump\":
		sprite.animation = \"jump\"
		sprite.play()


func physicsUpdate(delta):
	debugModeCheck()
	flyingCheck()
	fallingCheck()
	idleCheck()
	airDashCheck()
	applyGravity(delta)
	move()
	animations()

func debugModeCheck():
	if GV.debugMode == true and GV.activeCharacter == tails.character:
		transitioned.emit(self, \"debug\")

func flyingCheck():
	if Input.is_action_pressed(\"w\") and GV.activeCharacter == tails.character and tails.flyingEnabled:
		transitioned.emit(self, \"flying\")
	if !tails.is_on_floor() and tails.flyingEnabled:
		transitioned.emit(self, \"flying\")
	
func fallingCheck():
	if !tails.is_on_floor() and !tails.flyingEnabled and tails.velocity.y > 1:
		transitioned.emit(self, \"falling\")
	if !tails.is_on_floor() and tails.flyingEnabled:
		transitioned.emit(self, \"flying\")

func idleCheck():
	if tails.is_on_floor() and !Input.is_action_pressed(\"a\") and !Input.is_action_pressed(\"s\") and !Input.is_action_pressed(\"d\"):
		transitioned.emit(self, \"idle\")
	if GV.activeCharacter != tails.character and tails.is_on_floor():
		transitioned.emit(self, \"idle\")

func airDashCheck():
	# After double tapped in direction, dash in said locked direction. (locked in player movement script)
	if Input.is_action_just_pressed(\"a\") and GV.activeCharacter == tails.character:
		if tails.dashed == false and !dashingTimer.is_stopped() and !tails.is_on_floor():
			transitioned.emit(self, \"airdash\")
		if tails.dashed == false:
			dashingTimer.start()
	if Input.is_action_just_pressed(\"d\") and GV.activeCharacter == tails.character:
		if tails.dashed == false and !dashingTimer.is_stopped() and !tails.is_on_floor():
			transitioned.emit(self, \"airdash\")
		if tails.dashed == false:
			dashingTimer.start()
	if tails.is_on_floor():
		tails.dashed = false

func applyGravity(delta):
	if not tails.is_on_floor() and GV.debugMode == false:
		tails.velocity += (tails.get_gravity() * delta) / 4*tails.scale.x
	if not tails.is_on_floor() and GV.debugMode == false and tails.flyingEnabled:
		tails.velocity += (tails.get_gravity() * delta) / 16*tails.scale.x

func move():
	if tails.direction:
		tails.velocity.x = lerp(tails.velocity.x, tails.direction*tails.SPEED*tails.scale.x, 0.025)

func animations():
	if sprite.animation != \"jump\":
		sprite.animation = \"jump\"
		sprite.play()
"

[sub_resource type="GDScript" id="GDScript_fbgj3"]
script/source = "extends State

@onready var tails = get_parent().get_parent()
@onready var dashingTimer = $\"../../Double Tap Dash Timer\"
@onready var sprite = $\"../../AnimatedSprite2D\"

func physicsUpdate(delta):
	jumpingCheck()
	airDashCheck()
	idleCheck()
	move()
	movingCheck()
	debugModeCheck()
	flyingCheck()
	applyGravity(delta)
	animations()

func airDashCheck():
	# After double tapped in direction, dash in said locked direction. (locked in player movement script)
	if Input.is_action_just_pressed(\"a\") and GV.activeCharacter == tails.character:
		if tails.dashed == false and !dashingTimer.is_stopped() and !tails.is_on_floor():
			transitioned.emit(self, \"airdash\")
		if tails.dashed == false:
			dashingTimer.start()
	if Input.is_action_just_pressed(\"d\") and GV.activeCharacter == tails.character:
		if tails.dashed == false and !dashingTimer.is_stopped() and !tails.is_on_floor():
			transitioned.emit(self, \"airdash\")
		if tails.dashed == false:
			dashingTimer.start()
	if tails.is_on_floor():
		tails.dashed = false

func idleCheck():
	if tails.is_on_floor() and !Input.is_action_pressed(\"a\") and !Input.is_action_pressed(\"s\") and !Input.is_action_pressed(\"d\"):
		transitioned.emit(self, \"idle\")
	if GV.activeCharacter != tails.character and tails.is_on_floor():
		transitioned.emit(self, \"idle\")

func move():
	if tails.direction:
		tails.velocity.x = lerp(tails.velocity.x, tails.direction*tails.SPEED*tails.scale.x, 0.025)

func movingCheck():
	if tails.is_on_floor() and tails.direction != 0 and !Input.is_action_pressed(\"w\"):
			transitioned.emit(self, \"moving\")

func debugModeCheck(): # later check if this function needs to be in every script or if it can just be in sonic script then you call it from here and it still works
	if GV.debugMode == true and GV.activeCharacter == tails.character:
		transitioned.emit(self, \"debug\")

func flyingCheck():
	if Input.is_action_pressed(\"w\") and GV.activeCharacter == tails.character and tails.flyingEnabled:
		tails.velocity.y = tails.JUMP_VELOCITY/3*tails.scale.x
		transitioned.emit(self, \"flying\")
	if !tails.is_on_floor() and tails.flyingEnabled and tails.velocity.y < 1 : # the < 1 makes sure we are positive velocity
		transitioned.emit(self, \"flying\")

func applyGravity(delta):
	if not tails.is_on_floor() and GV.debugMode == false:
		tails.velocity += (tails.get_gravity() * delta) / 4*tails.scale.x
	if not tails.is_on_floor() and GV.debugMode == false and tails.flyingEnabled:
		tails.velocity += (tails.get_gravity() * delta) / 32*tails.scale.x

func animations():
	if sprite.animation != \"falling\":
		sprite.animation = \"falling\"
		sprite.play()

func jumpingCheck():
	if tails.is_on_floor() and Input.is_action_pressed(\"w\"):
			transitioned.emit(self, \"jumping\")
"

[sub_resource type="GDScript" id="GDScript_38obh"]
script/source = "extends State

@onready var tails = get_parent().get_parent()
@onready var sprite = $\"../../AnimatedSprite2D\"

func enter():
	tails.dashed = true
	animations()
	tails.velocity.y = 0
	tails.velocity.x += 1000*tails.direction * tails.scale.x # Tails dash is intentionally weaker than Sonic's

func physicsUpdate(delta):
	fallingCheck()
	debugModeCheck()
	animations()

func fallingCheck():
	if abs(tails.velocity.x) < 100*tails.scale.x:
		transitioned.emit(self, \"falling\")

func debugModeCheck():
	if GV.debugMode == true and GV.activeCharacter == tails.character:
		transitioned.emit(self, \"debug\")

func animations():
	if sprite.animation != \"dash forward\":
		sprite.animation = \"dash forward\"
"

[sub_resource type="GDScript" id="GDScript_5lnh7"]
script/source = "extends State

@onready var sprite = $\"../../AnimatedSprite2D\"
@onready var tails = get_parent().get_parent()
@onready var dashingTimer = $\"../../Double Tap Dash Timer\"

func enter():
	if tails.is_on_floor():
		tails.velocity.y = tails.JUMP_VELOCITY/3*tails.scale.x
	# so that wont immediately go back to idle

func _physics_process(_delta): # we use physics process so that even when state isnt active this works
	if Input.is_action_just_pressed(\"f\") and GV.activeCharacter == \"tails\": # toggle flying with f key
		if tails.flyingEnabled:
			tails.flyingEnabled = false
		elif !tails.flyingEnabled:
			tails.flyingEnabled = true

func physicsUpdate(delta):
	move()
	fly()
	idleCheck()
	fallingCheck()
	airDashCheck()
	applyGravity(delta)

func move():
	if tails.direction:
		tails.velocity.x = lerp(tails.velocity.x, tails.direction*tails.SPEED*tails.scale.x, 0.025)

func fly():
	if Input.is_action_just_pressed(\"w\") and GV.debugMode == false and GV.activeCharacter == tails.character and tails.flyingEnabled: #if flying then fly
		tails.velocity.y = tails.JUMP_VELOCITY/3*tails.scale.x
	if sprite.animation != \"fly\":
		sprite.animation = \"fly\"
		sprite.play()

func idleCheck():
	if tails.is_on_floor() and tails.direction == 0:
		transitioned.emit(self, \"idle\")

func fallingCheck():
	if !tails.is_on_floor() and tails.velocity.y > 1:
		transitioned.emit(self, \"falling\")

func airDashCheck():
	# After double tapped in direction, dash in said locked direction. (locked in player movement script)
	if Input.is_action_just_pressed(\"a\") and GV.activeCharacter == tails.character:
		if tails.dashed == false and !dashingTimer.is_stopped() and !tails.is_on_floor():
			transitioned.emit(self, \"airdash\")
		if tails.dashed == false:
			dashingTimer.start()
	if Input.is_action_just_pressed(\"d\") and GV.activeCharacter == tails.character:
		if tails.dashed == false and !dashingTimer.is_stopped() and !tails.is_on_floor():
			transitioned.emit(self, \"airdash\")
		if tails.dashed == false:
			dashingTimer.start()
	if tails.is_on_floor():
		tails.dashed = false

func applyGravity(delta):
	if not tails.is_on_floor() and GV.debugMode == false:
		tails.velocity += (tails.get_gravity() * delta) / 4*tails.scale.x
	if not tails.is_on_floor() and GV.debugMode == false and tails.flyingEnabled:
		tails.velocity += (tails.get_gravity() * delta) / 32*tails.scale.x
"

[node name="Tails" type="CharacterBody2D" groups=["Character"]]
collision_layer = 4
script = ExtResource("1_33gqt")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
sprite_frames = SubResource("SpriteFrames_q6asv")
animation = &"dash forward"
autoplay = "idle"

[node name="DefaultCollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(2, 1)
rotation = 1.5708
shape = SubResource("CapsuleShape2D_x7f5k")

[node name="Double Tap Dash Timer" parent="." instance=ExtResource("1_3v1di")]

[node name="HPComponent" type="Node2D" parent="."]
script = ExtResource("38_2ofmi")
metadata/_custom_type_script = "uid://c4e1fna20ooxw"

[node name="HitboxComponent" type="Area2D" parent="."]
script = ExtResource("39_jy36n")
metadata/_custom_type_script = "uid://b8g0homsjo5mp"

[node name="DefaultCollisionShape2D" type="CollisionShape2D" parent="HitboxComponent"]
position = Vector2(2, 1)
rotation = 1.5708
shape = SubResource("CapsuleShape2D_x7f5k")

[node name="state" type="Label" parent="."]
offset_left = -22.0
offset_top = -30.0
offset_right = 18.0
offset_bottom = -7.0
theme_override_font_sizes/font_size = 10
text = "Idle <:1234567890>"

[node name="State Machine" type="Node" parent="." node_paths=PackedStringArray("initialState")]
script = ExtResource("40_x6xji")
initialState = NodePath("Idle")

[node name="Idle" type="Node" parent="State Machine"]
script = SubResource("GDScript_jy36n")
metadata/_custom_type_script = "uid://b8mncc66i1a1l"

[node name="Moving" type="Node" parent="State Machine"]
script = SubResource("GDScript_x6xji")
metadata/_custom_type_script = "uid://b8mncc66i1a1l"

[node name="Debug" type="Node" parent="State Machine"]
script = SubResource("GDScript_3lrm4")
metadata/_custom_type_script = "uid://b8mncc66i1a1l"

[node name="Jumping" type="Node" parent="State Machine"]
script = SubResource("GDScript_kki6k")
metadata/_custom_type_script = "uid://b8mncc66i1a1l"

[node name="Falling" type="Node" parent="State Machine"]
script = SubResource("GDScript_fbgj3")
metadata/_custom_type_script = "uid://b8mncc66i1a1l"

[node name="AirDash" type="Node" parent="State Machine"]
script = SubResource("GDScript_38obh")
metadata/_custom_type_script = "uid://b8mncc66i1a1l"

[node name="Flying" type="Node" parent="State Machine"]
script = SubResource("GDScript_5lnh7")
metadata/_custom_type_script = "uid://b8mncc66i1a1l"
